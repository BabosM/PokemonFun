@using X.PagedList.Mvc
@using X.PagedList.Mvc.Core;
@using X.PagedList;
@model X.PagedList.IPagedList<PokemonFun.Models.PokemonModel>
@{
    ViewBag.Title = "Index";
}
<div class="container p-3">
    <div class="row pt-4">
        <div class="col-6">
            <h2 class="text-primary">Pokemon List</h2>
        </div>
        <div class="col-6">
            <a asp-controller="Pokemon" asp-action="GetRandomPokemon" class="btn btn-primary">Random pokemon</a>
        </div>
        <form asp-controller="Pokemon" asp-action="Index" method="get">
            @using (Html.BeginForm("Index", "Pokemon", FormMethod.Get))
            {
                <p>
                    Find by name: @Html.TextBox("searchPokemon", ViewBag.searchPokemon as string)
                    <input type="submit" value="Search" />
                </p>
            }
        </form>
        <div class="col-6" >
            @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index",
           new { page, sortOrder = ViewBag.CurrentSort, curretFilter = ViewBag.CurrentFilter }))
            Page: @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
        </div>
    </div>
    <br />
    @if (Model.Count() > 0)
    {
        <table class="table table-bordered table-striped" style="width:100%">
            <thead>
                <tr>
                    <th>
                        Pokemon name
                    </th>

                    <th>
                        Front view
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var pokemon in Model)
                {
                    <tr>
                        <td width="25%">@pokemon.Name</td>
                        <td width="25%"> <img src="@pokemon.sprites.front_default" style="width:100px; height:100px;" /></td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p>No pokemon created yet </p>
    }
</div>